#!/usr/bin/env node

/**
 * Project migrate tool
 *
 * projects-migrate --sync
 */

'use strict';

const _exec = require('child_process').execSync;
const fs = require('fs');
const path = require('path');

const PROJECTS_FOLDER = process.env.PROJECTS_FOLDER;

const exec = (cmd) => {
  return _exec(cmd, { encoding: 'utf8' });
};

const getProjects = () => {
  let projects = fs.readdirSync(PROJECTS_FOLDER)

    // filter directories
    .filter((project) => fs.statSync(path.resolve(PROJECTS_FOLDER, project)).isDirectory())

    // filter projects that contain .git
    .filter(hasGitFolder)

    // filter projects without git remotes
    .filter((project) => getGitOrigins(project).length);

  return projects;
};

const hasGitFolder = (project) => {
  try {
    return fs.statSync(path.resolve(PROJECTS_FOLDER, project, '.git')).isDirectory();
  } catch (error) {}

  return false;
};

const getGitOrigins = (project) => {
  let response = exec(`cd ${path.resolve(PROJECTS_FOLDER, project)} && git remote -v`).trim();
  let originRegexp = /^(\w+)\s+(\S+)\s+\((\w+)\)$/gm;
  let origins = [];

  let match;
  while (match = originRegexp.exec(response)) {
    let name = match[1];
    let url = match[2];
    let method = match[3];

    origins.push({ name, method, url });
  }

  return origins;
};
